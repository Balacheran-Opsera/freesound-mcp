version: "3.7"

volumes:
    pgdata:
    m2home:
    solrdata:
    fswebhome:

services:

    # Database server
    db:
        image: postgres:12.1
        volumes:
            - pgdata:/var/lib/postgresql/data
            - ./freesound-data/db_dev_dump:/freesound-data/db_dev_dump
        env_file:
            - environment
        ports:
            - 5432:5432
        environment:
            - POSTGRES_USER=freesound
            - POSTGRES_DB=freesound
            - FS_USER_ID=$FS_USER_ID_FROM_ENV

    # Web worker
    web:
        build:
            context: ./
            dockerfile: ./docker/Dockerfile.workers_web
        init: true
        command: python manage.py runserver 0.0.0.0:8000
        volumes:
            - .:/code
            - ./freesound-data/:/freesound-data
            - fswebhome:/home/fsweb
        ports:
            - 8000:8000
        env_file:
            - environment
        environment:
            - FS_USER_ID=$FS_USER_ID_FROM_ENV
        depends_on:
            - db
            - rabbit
            - redis

    # Search server
    search:
        build:
            context: ./docker/search
            dockerfile: Dockerfile.search
        init: true
        command: mvn -Dsolr.solr.home=/code/solr.home jetty:run-war
        volumes:
            - solrdata:/var/lib/solr
            - m2home:/root/.m2
            - ./utils/search/solr4.5.1/solr.home:/code/solr.home
        ports:
            - 8080:8080
        environment:
            - FS_USER_ID=$FS_USER_ID_FROM_ENV

    # Redis (caches)
    redis:
        image: redis:alpine
        command: redis-server --port 6379
        ports:
            - 6379:6379

    # Tag recommendation http server
    tagrecommendation:
        build:
            context: ./tagrecommendation
            dockerfile: ../docker/Dockerfile.tagrecommendation
        init: true
        command: python tagrecommendation_server.py
        volumes:
            - ./tagrecommendation:/code
            - ./freesound-data/tag_recommendation_models:/freesound-data/tag_recommendation_models
        ports:
            - 8010:8010
        environment:
            - FS_USER_ID=$FS_USER_ID_FROM_ENV

    # Similarity http server
    similarity:
        build:
            context: ./similarity
            dockerfile: ../docker/Dockerfile.similarity
        init: true
        command: python similarity_server.py
        volumes:
            - ./similarity:/code
            - ./freesound-data/similarity_index:/freesound-data/similarity_index
            - ./freesound-data/analysis:/freesound-data/analysis
        ports:
            - 8008:8008
        environment:
            - FS_USER_ID=$FS_USER_ID_FROM_ENV

    # Celery broker (queue manager)
    rabbit:
        hostname: rabbit
        image: rabbitmq:3.9.1-management
        ports:
            - "5672:5672"
            - "15672:15672"  # To access management plugin
        volumes:
            - ./docker/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
            - ./freesound-data/rabbitmq:/var/lib/rabbitmq/mnesia/

    # Clustering worker (celery worker)
    worker_clustering:
        build:
            context: ./
            dockerfile: ./docker/Dockerfile.clustering
        init: true
        command: celery -A freesound worker -l info -Q clustering
        volumes:
            - .:/code
            - ./freesound-data/clustering_index:/freesound-data/clustering_index
        depends_on:
            - rabbit
            - redis
        environment:
            - ENV_CELERY_WORKER=1
            - FS_USER_ID=$FS_USER_ID_FROM_ENV

    # New analysis worker (celery worker) for the Audio Commons extractor - needs image to be built from freesound-audio-analyzers repository
    worker_analyzer1:
        image: ac-extractor_1
        volumes:
            - ./freesound-data/:/freesound-data
        init: true
        command: celery -A main worker --concurrency=4 -l info -Q ac-extractor_1
        depends_on:
            - rabbit

    # New analysis worker (celery worker) for the Audioset-vggish extractor - needs image to be built from freesound-audio-analyzers repository
    worker_analyzer2:
        image: audioset-vggish-extractor_1
        volumes:
            - ./freesound-data/:/freesound-data
        init: true
        command: celery -A main worker --concurrency=4 -l info -Q audioset-vggish-extractor_1
        depends_on:
            - rabbit

    # New analysis worker (celery worker) for the Essentia extractor - needs image to be built from freesound-audio-analyzers repository
    worker_analyzer3:
        image: fs-essentia-extractor_1
        volumes:
            - ./freesound-data/:/freesound-data
        init: true
        command: celery -A main worker --concurrency=4 -l info -Q fs-essentia-extractor_1
        depends_on:
            - rabbit

    # Process analysis results worker (celery worker)
    worker_process_analysis_results:
        build:
            context: ./
            dockerfile: ./docker/Dockerfile.workers_web
        init: true
        command: celery -A freesound worker -l info -Q process_analysis_results
        volumes:
            - .:/code
            - ./freesound-data/:/freesound-data
        env_file:
            - environment
        environment:
            - FS_USER_ID=$FS_USER_ID_FROM_ENV
        depends_on:
            - db
            - rabbit

    # Gearman (processing, async tasks and old anaylsis job manager)
    gearmand:
        image: artefactual/gearmand

    # Processing worker (gearman worker)
    worker_processing:
        build:
            context: ./
            dockerfile: ./docker/Dockerfile.workers_web
        init: true
        command: python manage.py gm_worker_processing --queue process_sound
        volumes:
            - .:/code
            - ./freesound-data/:/freesound-data
        env_file:
            - environment
        environment:
            - FS_USER_ID=$FS_USER_ID_FROM_ENV
        depends_on:
            - db
            - gearmand

    # Old analysis worker (gearman worker)
    worker_analysis:
        build:
            context: ./
            dockerfile: ./docker/Dockerfile.workers_web
        init: true
        command: python manage.py gm_worker_processing --queue analyze_sound
        volumes:
            - .:/code
            - ./freesound-data/:/freesound-data
        env_file:
            - environment
        environment:
            - FS_USER_ID=$FS_USER_ID_FROM_ENV
        depends_on:
            - db
            - gearmand

    # Async tasks worker (gearman worker)
    worker_async_tasks:
        build:
            context: ./
            dockerfile: ./docker/Dockerfile.workers_web
        init: true
        command: python manage.py gm_worker_async_tasks
        volumes:
            - .:/code
            - ./freesound-data/:/freesound-data
        env_file:
            - environment
        environment:
            - FS_USER_ID=$FS_USER_ID_FROM_ENV
        depends_on:
            - db
            - gearmand
